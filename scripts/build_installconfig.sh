#!/bin/bash

set -ex

export OS_CLOUD="${OS_CLOUD:-default}"
OPENSHIFT_NEEDS_PROXY="${OPENSHIFT_NEEDS_PROXY:-$(if [ "${OS_CLOUD}" != "default" ]; then echo "no"; else echo "yes"; fi)}"

# Validate and normalize OPENSHIFT_NEEDS_PROXY to yes/no
validate_openshift_needs_proxy() {
    local value=$(echo "${OPENSHIFT_NEEDS_PROXY}" | tr '[:upper:]' '[:lower:]')

    case "${value}" in
        yes|y)
            OPENSHIFT_NEEDS_PROXY="yes"
            ;;
        no|n)
            OPENSHIFT_NEEDS_PROXY="no"
            ;;
        *)
            echo "ERROR: OPENSHIFT_NEEDS_PROXY must be 'yes' or 'no' (got: '${OPENSHIFT_NEEDS_PROXY}')"
            echo "Valid values: yes, YES, y, Y, no, NO, n, N"
            exit 1
            ;;
    esac
}

validate_openshift_needs_proxy

PROXY_USER="${PROXY_USER:-rhoai}"
PROXY_PASSWORD="${PROXY_PASSWORD:-12345678}"
PROXY_HOST="${PROXY_HOST:-192.168.130.1}"
PROXY_PORT="${PROXY_PORT:-3128}"
PULL_SECRET="$(cat "${PULL_SECRET}" | jq -c)"
CLUSTER_NAME="${CLUSTER_NAME:-rhoai}"
BASE_DOMAIN="${BASE_DOMAIN:-shiftstack.test}"
SSH_PUB_KEY="$(cat "${SSH_PUB_KEY}")"
MASTER_COUNT="${MASTER_COUNT:-3}"
WORKER_COUNT="${WORKER_COUNT:-1}"
OPENSHIFT_NETWORKTYPE="${OPENSHIFT_NETWORKTYPE:-OVNKubernetes}"
OPENSTACK_FLAVOR="${OPENSTACK_FLAVOR:-master}"
OPENSTACK_WORKER_FLAVOR="${OPENSTACK_WORKER_FLAVOR:-worker}"
OPENSTACK_EXTERNAL_NETWORK="${OPENSTACK_EXTERNAL_NETWORK:-public}"
EXTERNAL_DNS="${EXTERNAL_DNS:-192.168.122.1}"

ARTIFACT_DIR="../clusters/${CLUSTER_NAME}"
INSTALL_CONFIG="${ARTIFACT_DIR}/install-config.yaml"

FLOATINGIP_API=$(openstack floating ip create "${OPENSTACK_EXTERNAL_NETWORK}" --description "${CLUSTER_NAME}-api" --format value --column floating_ip_address)
FLOATINGIP_INGRESS=$(openstack floating ip create "${OPENSTACK_EXTERNAL_NETWORK}" --description "${CLUSTER_NAME}-ingress" --format value --column floating_ip_address)
ALLOW_SSH=$(openstack security group show allow-ssh -f json | jq -r .id)

if [ ! -f "${INSTALL_CONFIG}" ]; then
    cat > "${INSTALL_CONFIG}" << EOF
apiVersion: v1
baseDomain: ${BASE_DOMAIN}
compute:
- name: worker
  platform:
    openstack:
      zones: []
      additionalNetworkIDs: []
      type: ${OPENSTACK_WORKER_FLAVOR}
  replicas: ${WORKER_COUNT}
controlPlane:
  name: master
  platform:
    openstack:
      zones: []
      type: ${OPENSTACK_FLAVOR}
      additionalSecurityGroupIDs: ["${ALLOW_SSH}"]
  replicas: ${MASTER_COUNT}
metadata:
  name: ${CLUSTER_NAME}
networking:
  clusterNetworks:
  - cidr:    10.128.0.0/14
    hostSubnetLength: 9
  serviceCIDR: 172.30.0.0/16
  machineCIDR: 10.196.0.0/16
  type: ${OPENSHIFT_NETWORKTYPE}
platform:
  openstack:
    cloud:            ${OS_CLOUD}
    externalNetwork:  ${OPENSTACK_EXTERNAL_NETWORK}
    region:         "regionOne"
    apiFloatingIP:  ${FLOATINGIP_API}
    ingressFloatingIP:  ${FLOATINGIP_INGRESS}
    externalDNS:    ["${EXTERNAL_DNS}"]
pullSecret: |
  ${PULL_SECRET}
sshKey: |
  ${SSH_PUB_KEY}
EOF
fi

if [ "${OPENSHIFT_NEEDS_PROXY}" = "yes" ]; then
  yq eval -i "
    .proxy.httpProxy = \"http://${PROXY_USER}:${PROXY_PASSWORD}@${PROXY_HOST}:${PROXY_PORT}/\" |
    .proxy.httpsProxy = \"http://${PROXY_USER}:${PROXY_PASSWORD}@${PROXY_HOST}:${PROXY_PORT}/\" |
    .proxy.noProxy = \".cluster.local,.svc,10.128.0.0/14,127.0.0.1,169.254.169.254,10.196.0.0/16,172.30.0.0/16,.${BASE_DOMAIN},localhost\"
  " "${INSTALL_CONFIG}"
fi

hosts="# Generated by shiftstack for $CLUSTER_NAME - Do not edit
$FLOATINGIP_API api.${CLUSTER_NAME}.${BASE_DOMAIN}
$FLOATINGIP_INGRESS *.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
$FLOATINGIP_INGRESS console-openshift-console.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
$FLOATINGIP_INGRESS integrated-oauth-server-openshift-authentication.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
$FLOATINGIP_INGRESS oauth-openshift.apps.${CLUSTER_NAME}.${BASE_DOMAIN}
# End of $CLUSTER_NAME nodes"

old_hosts=$(awk "/# Generated by shiftstack for $CLUSTER_NAME - Do not edit/,/# End of $CLUSTER_NAME nodes/" /etc/hosts)

if [ "${hosts}" != "${old_hosts}" ]; then
    echo Updating hosts file
    sudo sed -i "/# Generated by shiftstack for $CLUSTER_NAME - Do not edit/,/# End of $CLUSTER_NAME nodes/d" /etc/hosts
    echo "$hosts" | sudo tee -a /etc/hosts
fi
